general:
    artifacts:
        - /home/ubuntu/GrpcEample/app/build/outputs/apk/

machine:
    environment:
        ANDROID_HOME: /usr/local/android-sdk-linux

dependencies:
    pre:
        - cp -r licenses $ANDROID_HOME
        - wget "https://services.gradle.org/distributions/gradle-4.0.1-bin.zip"; unzip gradle-4.0.1-bin.zip
        - cd gradle-4.0.1 && ls -la
        - source environmentSetup.sh && copyEnvVarsToGradleProperties
        - echo y | android update sdk --no-ui --all --filter "android-24"
        # Android SDK Platform 25 Build Tools
        - echo y | android update sdk --no-ui --all --filter "tools"
        # Android SDK Platform Tools 24.0.2
        - echo y | android update sdk --no-ui --all --filter "platform-tools"
        # Android SDK Build-tools, revision 24.0.2
        - echo y | android update sdk --no-ui --all --filter "build-tools-24.0.1"
        # Android Support Repository, revision 35 / Local Maven repository for Support Libraries
        - echo y | android update sdk --no-ui --all --filter "extra-android-m2repository"
        # Android 24 ARM Google APIs system Image
        - echo y | android update sdk --no-ui --all --filter "sys-img-armeabi-v7a-google_apis-24"
        # Create the android 24 AVD
        - echo no | android create avd -n circleci-android24-googleapis -t 'android-24' --abi google_apis/armeabi-v7a
        - |
          # software rendering is broken in revision 10, we'll use revision 08
          wget "https://dl-ssl.google.com/android/repository/sys-img/google_apis/armeabi-v7a-24_r08.zip"
          unzip armeabi-v7a-24_r08.zip
          # overwrite some of the new files with older files
          mv armeabi-v7a/* /usr/local/android-sdk-linux/system-images/android-24/google_apis/armeabi-v7a
          rm armeabi-v7a-24_r08.zip
    override:
        - echo y | android update sdk --no-ui --all --filter tools,platform-tools,build-tools-25.0.3,android-25,extra-google-m2repository,extra-google-google_play_services,extra-android-m2repository
        - ANDROID_HOME=/usr/local/android-sdk-linux ./gradlew dependencies
checkout:
    post:
      - cp -r licenses/. $ANDROID_HOME/licenses
test:
    override:
        # start the build
        - (./gradlew assemble):
            timeout: 360
        # start the emulator
        - emulator -avd circleci-android24-googleapis -no-window -gpu off:
            background: true
            parallel: true
        # wait for it to have booted
        - circle-android wait-for-boot
        # unlock the emulator screen
        - sleep 30
        - adb shell input keyevent 82
        - mkdir -p app/build/reports/tests/debug $CIRCLE_TEST_REPORTS/AppUnitTests
        - mkdir -p app/build/reports/test-report $CIRCLE_TEST_REPORTS/ComponentTests
        - mkdir -p app/build/reports/androidTests/connected $CIRCLE_TEST_REPORTS/AndroidTests
        - mkdir -p app/build/reports/jacoco/test/html $CIRCLE_TEST_REPORTS/CodeCoverageReport
        # run tests  against the emulator.
        - (./gradlew jacoco -PdisablePreDex):
            timeout: 1800
        # copy the build outputs to artifacts
        - cp -r app/build/outputs $CIRCLE_ARTIFACTS
        # copy test results
        - mv app/build/reports/tests/debug $CIRCLE_TEST_REPORTS/AppUnitTests
        - mv app/build/reports/test-report $CIRCLE_TEST_REPORTS/ComponentTests
        - mv app/build/reports/androidTests/connected $CIRCLE_TEST_REPORTS/AndroidTests
        - mv app/build/reports/jacoco/test/html $CIRCLE_TEST_REPORTS/CodeCoverageReport
        # copy lint report
        #- mkdir $CIRCLE_TEST_REPORTS/Lint
        #- mv app/build/outputs/lint-results_files $CIRCLE_TEST_REPORTS/Lint
        #- mv app/build/outputs/lint-results.html $CIRCLE_TEST_REPORTS/Lint/lint-app-results.html
